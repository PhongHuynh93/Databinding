<?xml version="1.0" encoding="utf-8"?>
<!--<android.support.constraint.ConstraintLayout-->
<!--xmlns:android="http://schemas.android.com/apk/res/android"-->
<!--xmlns:app="http://schemas.android.com/apk/res-auto" xmlns:tools="http://schemas.android.com/tools"-->
<!--android:layout_width="match_parent"-->
<!--android:layout_height="match_parent"-->
<!--app:layout_behavior="@string/appbar_scrolling_view_behavior"-->
<!--tools:context="example.test.phong.databinding.MainActivity" tools:showIn="@layout/activity_main">-->

<!--<TextView-->
<!--android:layout_width="wrap_content"-->
<!--android:layout_height="wrap_content"-->
<!--android:text="Hello World!"-->
<!--app:layout_constraintBottom_toBottomOf="parent"-->
<!--app:layout_constraintLeft_toLeftOf="parent"-->
<!--app:layout_constraintRight_toRightOf="parent"-->
<!--app:layout_constraintTop_toTopOf="parent"/>-->

<!--</android.support.constraint.ConstraintLayout>-->

<layout xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>

        <!--info Another thing thing to remember is, when you are mentioning class name directly in type attribute, you have to add import statement for them. You can see imports for User, List and Drawable class.-->
        <import type="example.test.phong.databinding.model.User"/>
        <import type="example.test.phong.databinding.model.RegistrationModel"/>

        <variable name="registration" type="RegistrationModel"/>
        <variable name="user" type="User"/>
    </data>
    <LinearLayout
        app:layout_behavior="@string/appbar_scrolling_view_behavior"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <TextView
            android:id="@+id/tv_name"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{registration.name}"/>

        <!--test - can not use @={user.firstName} because user is not observable, and it didn't change the datas.-->
        <EditText
            android:id="@+id/edt_first_name"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:hint="Input first name"
            android:text="@{user.firstName}"/>

        <TextView
            android:id="@+id/tv_first_name"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{user.firstName}"/>

        <!--info Do single modification that is change @{} to @={} that’s it.
    What it does is when user types then it set the value back to the model class object so when you want to retrieve the value just call that object.-->
        <EditText
            android:id="@+id/edt_address"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:hint="Input address"
            android:text="@={registration.address}"/>

        <!--test modify when edt_address is modified-->
        <TextView
            android:id="@+id/tv_address"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{registration.address}"/>

        <!--info Remember the model class is having age data type as Integer and setText on a textview accepts String type. So it’s important to use String.valueOf() in case the data type is not String.-->
        <TextView
            android:id="@+id/tv_age"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{String.valueOf(registration.age)}"/>

        <!--info - Well data binding supports lots of expression and ternary operator is one of them.-->
        <TextView
            android:id="@+id/tv_status"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{registration.isMinor ? @string/minor : @string/major}"/>

    </LinearLayout>
</layout>